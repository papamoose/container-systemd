name: Build all docker images

on:
  pull_request:
    branches:
    - "main"
    - "dev"
  push:
    branches:
    - '!test*'
    - "**"
    tags:
    - "v*.*.*"
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  packages: write

jobs:
  almalinux9:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/papamoose/container-systemd-almalinux-9
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,${{ github.event.release.tag_name }}
            {%- if github.event_name == 'release' and github.event.release.tag_name -%}
            type=latest
            {%- endif -%}
          labels: |
            maintainer=papamoose
            org.opencontainers.image.title=almalinux-9
            org.opencontainers.image.description=Almalinux 9 container running systemd
            org.opencontainers.image.vendor=Papamoose Co

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.almalinux.9
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ubuntu2204:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/papamoose/container-systemd-ubuntu-2204
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,${{ github.event.release.tag_name }}
            {%- if github.event_name == 'release' and github.event.release.tag_name -%}
            type=latest
            {%- endif -%}
          labels: |
            maintainer=papamoose
            org.opencontainers.image.title=ubuntu-2204
            org.opencontainers.image.description=Ubuntu 22.04 container running systemd
            org.opencontainers.image.vendor=Papamoose Co

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.ubuntu.2204
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
